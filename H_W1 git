GIT Homework 1

 4. Создать внешний репозиторий c названием JSON.
 5. Клонировать репозиторий JSON на локальный компьютер. ==git clone+url
 6. Внутри локального JSON создать файл “new.json”.== touch new.json
 7. Добавить файл под гит.== git add . new.json
 8. Закоммитить файл. == git commit -m"add new file new.json"
 9. Отправить файл на внешний GitHub репозиторий.== git push 
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. 
{
"firstname":"MAksim",
        "lastname":"Yanchenko",
        "age":"23",
        "pets":"1 cat",
        "salary":"500$"
}

 11. Отправить изменения на внешний репозиторий. git commit -a -m "added new lines" git push
 12. Создать файл preferences.json== touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.=={
	"favourite film":"one alone",
	"favourite sitcom":"friends",
	"favourite dish":"potatoes",
	"favourite season":"summer",
	"coutry":"usa"
}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON =={
"skills":["gitbash,devtools,api,mobiletesting"]
}
 15. Отправить сразу 2 файла на внешний репозиторий. git add .  git commit -m "Add new lines" git push 
 16. На веб интерфейсе создать файл bug_report.json.==add file, create new file bug_report.json
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.{
  "Project":"",
  "Component":"",
  "Version":"",
  "Status":"",
  "Author":""
}
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. ==commit new file
 20. Синхронизировать внешний и локальный репозиторий JSON ==git pull






XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.== git clone +url
 23. Внутри локального XML создать файл “new.xml”.==touch new.xml
 24. Добавить файл под гит.== git add . new.xml
 25. Закоммитить файл.==git commit -m "added new file"
 26. Отправить файл на внешний GitHub репозиторий. ==  git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.<about_myself>
<full_name>Maksim Yanchenko</full_name>
<age>23</age>
<salary>500$</salary>
<pets>one_cat</pets>
</about_myself>
 28. Отправить изменения на внешний репозиторий. git commit -a -m "added new lines" git push
 29. Создать файл preferences.xml== touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.==<?xml version="1.0" encoding="UTF-8"?>

<About>
          
          <favourite_Film> one_alone </favourite_Film>
          <favourite_Sitcoms> Friends</favourite_Sitcoms>
          <favourite_Dish> potatoes </favourite_Dish>
          <favourite_Season> summer </favourite_Season>
          <country> USA  </country>
</About>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML ==
<?xml version="1.0" encoding="UTF-8"?>

<Skills>
 <theory/>
 <git/>
 <mobile_testing/>
 <postman/>
          
</Skills>
 32. Сделать коммит в одну строку.== git add . git commit -m "Add new lines"
 33. Отправить сразу 2 файла на внешний репозиторий.==  git push 
 34. На веб интерфейсе создать файл bug_report.xml.==add file, create new file bug_report.xml
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.==commit new file
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате 
XML.==
<?xml version="1.0" encoding="UTF-8"?>

<report>

<bug_ID>1023</bug_ID>

<summary>isert</summary>

<component>insert</component>

<version>insert</version>

<author>MD</author> 

</report>
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML==git pull



 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер.== git clone +url
 3. Внутри локального TXT создать файл “new.txt”. ==touch new.txt
 4. Добавить файл под гит.==git add . new.txt
 5. Закоммитить файл.==git commit -m "new file"
 6. Отправить файл на внешний GitHub репозиторий.==git push 
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
Yanchenko Maksim
age 23
 pets one cat
wanted_salary 500$
 8. Отправить изменения на внешний репозиторий. ==git add .  git commit -m "added new lines" git push 
 9. Создать файл preferences.txt ==touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.==
favourite_film  one alone,
favourite_sitcom - friends
favourite_dish - potstoes
favourite_season - summer
favourite_country - USA. 
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT ==touch skills.txt==
skills:
theory 
git
mobile_testing
SQL
data_base
 12. Сделать коммит в одну строку. git add . git commit -m "new 2 files"
 13. Отправить сразу 2 файла на внешний репозиторий.==git push
 14. На веб интерфейсе создать файл bug_report.txt.==add file, create new file bug_report.txt
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.==commit new file
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.==project

 id

created date

summary

status

category

components

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. commit 
 18. Синхронизировать внешний и локальный репозиторий TXT== git pull 
